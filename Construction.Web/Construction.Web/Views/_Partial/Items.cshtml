@{
    Layout = null;
}
@using Construction.Web.Models
@using Construction.Domain.Core
@model Pagination<Item>
<ul id="portfolio-grid" class="filterable-portfolio thumbnails portfolio-3cols isotope" data-cols="3cols">
    @foreach (var item in Model.Items)
    {
        <li class="portfolio_item">
            <div class="portfolio_item_holder">
                <figure class="thumbnail thumbnail__portfolio">
                    <a href="@item.Link" title="@item.Name" class="image-wrap hoverZoomLink" rel="prettyPhoto">
                        <img src="@item.Thumbnail" alt="@item.Name" class="hoverZoomLink">
                        <span class="zoom-icon"></span>
                    </a>
                </figure>
                <div class="caption caption__portfolio">
                    <p class="excerpt">@item.ShortDescription </p>
                    <p>
                        <a href="@item.Link" title="@item.Name" class="btn btn-primary">
                            <i class="fa fa-angle-double-right" aria-hidden="true"></i> Xem
                        </a>
                    </p>
                </div>

            </div>
        </li>
    }
</ul>
<div class="pagination pagination__posts">
    <ul>
        @for (int i = 0; i < Model.TotalPage; i++)
        {

            string activeClass = i == Model.PageNumber ? "active" : "inactive";
            <li>

                <a href="@string.Format("{0}/{1}", Model.Link, i + 1)" class="@activeClass">@(i + 1)</a>
            </li>
        }

    </ul>
</div>
<script>
    jQuery(document).ready(function ($) {
        var $container = $('#portfolio-grid'),
			items_count = $(".portfolio_item").size();

        $(window).load(function () {
            setColumnWidth();
            $container.isotope({
                itemSelector: '.portfolio_item',
                hiddenClass: 'portfolio_hidden',
                resizable: false,
                transformsEnabled: true,
                layoutMode: 'fitRows'
            });
        });

        function getNumColumns() {
            var $folioWrapper = $('#portfolio-grid').data('cols');

            if ($folioWrapper == '2cols') {
                var winWidth = $("#portfolio-grid").width(),
					column = 2;
                if (winWidth < 380) column = 1;
                return column;
            }

            else if ($folioWrapper == '3cols') {
                var winWidth = $("#portfolio-grid").width(),
					column = 3;
                if (winWidth < 380) column = 1;
                else if (winWidth >= 380 && winWidth < 788) column = 2;
                else if (winWidth >= 788 && winWidth < 1160) column = 3;
                else if (winWidth >= 1160) column = 3;
                return column;
            }

            else if ($folioWrapper == '4cols') {
                var winWidth = $("#portfolio-grid").width(),
					column = 4;
                if (winWidth < 380) column = 1;
                else if (winWidth >= 380 && winWidth < 788) column = 2;
                else if (winWidth >= 788 && winWidth < 1160) column = 3;
                else if (winWidth >= 1160) column = 4;
                return column;
            }
        }

        function setColumnWidth() {
            var columns = getNumColumns(),
				containerWidth = $("#portfolio-grid").width(),
				postWidth = containerWidth / columns;
            postWidth = Math.floor(postWidth);

            $(".portfolio_item").each(function (index) {
                $(this).css({ "width": postWidth + "px" });
            });
        }

        function arrange() {
            setColumnWidth();
            $container.isotope('reLayout');
        }

        $(window).on("debouncedresize", function (event) {
            arrange();
        });

        // Filter projects
        $('.filter a').click(function () {
            var $this = $(this).parent('li');
            // don't proceed if already active
            if ($this.hasClass('active')) {
                return;
            }

            var $optionSet = $this.parents('.filter');
            // change active class
            $optionSet.find('.active').removeClass('active');
            $this.addClass('active');

            var selector = $(this).attr('data-filter');
            $container.isotope({ filter: selector });

            var hiddenItems = 0,
				showenItems = 0;
            $(".portfolio_item").each(function () {
                if ($(this).hasClass('portfolio_hidden')) {
                    hiddenItems++;
                };
            });

            showenItems = items_count - hiddenItems;
            if (($(this).attr('data-count')) > showenItems) {
                $(".pagination__posts").css({ "display": "block" });
            } else {
                $(".pagination__posts").css({ "display": "none" });
            }
            return false;
        });
    });
</script>