{
  "version": "0.1",
  "toolInfo": {
    "toolName": "Microsoft (R) Visual C# Compiler",
    "productVersion": "1.0.0",
    "fileVersion": "1.0.0"
  },
  "issues": [
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 5,
                "startColumn": 17,
                "endLine": 5,
                "endColumn": 29
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\FilterConfig.cs",
              "region": {
                "startLine": 5,
                "startColumn": 17,
                "endLine": 5,
                "endColumn": 29
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1118",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\RouteConfig.cs",
              "region": {
                "startLine": 9,
                "startColumn": 17,
                "endLine": 9,
                "endColumn": 28
              }
            }
          ]
        }
      ],
      "shortMessage": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
      "fullMessage": "Utility classes, which are collections of static members, are not meant to be instantiated. Even abstract utility classes, which can be extended, should not have public constructors.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Utility classes should not have public constructors",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1118",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S125",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\Startup.Auth.cs",
              "region": {
                "startLine": 21,
                "startColumn": 11,
                "endLine": 21,
                "endColumn": 98
              }
            }
          ]
        }
      ],
      "shortMessage": "Remove this commented out code.",
      "fullMessage": "Programmers should not comment out code as it bloats programs and reduces readability.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Sections of code should not be "commented out"",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-125",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S125",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\Startup.Auth.cs",
              "region": {
                "startLine": 52,
                "startColumn": 12,
                "endLine": 52,
                "endColumn": 36
              }
            }
          ]
        }
      ],
      "shortMessage": "Remove this commented out code.",
      "fullMessage": "Programmers should not comment out code as it bloats programs and reduces readability.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Sections of code should not be "commented out"",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-125",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 10,
                "startColumn": 41,
                "endLine": 10,
                "endColumn": 59
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 11,
                "startColumn": 24,
                "endLine": 11,
                "endColumn": 55
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 13,
                "startColumn": 41,
                "endLine": 13,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 14,
                "startColumn": 24,
                "endLine": 14,
                "endColumn": 52
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 18,
                "startColumn": 41,
                "endLine": 18,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 19,
                "startColumn": 24,
                "endLine": 19,
                "endColumn": 47
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 21,
                "startColumn": 41,
                "endLine": 21,
                "endColumn": 62
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S1075",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\App_Start\BundleConfig.cs",
              "region": {
                "startLine": 25,
                "startColumn": 40,
                "endLine": 25,
                "endColumn": 55
              }
            }
          ]
        }
      ],
      "shortMessage": "Refactor your code not to use hardcoded absolute paths or URIs.",
      "fullMessage": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, ...etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "URIs should not be hardcoded",
        "category": "Sonar Code Smell",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-1075",
        "isEnabledByDefault": "True"
      }
    },
    {
      "ruleId": "S2201",
      "locations": [
        {
          "analysisTarget": [
            {
              "uri": "E:\Working\Git\Construction.Web\Construction.Web\Controllers\HomeController.cs",
              "region": {
                "startLine": 14,
                "startColumn": 12,
                "endLine": 14,
                "endColumn": 34
              }
            }
          ]
        }
      ],
      "shortMessage": "Use the return value of method 'ToList', which has no side effect.",
      "fullMessage": "When the call to a function doesn't have any side effects, what is the point of making the call if the results are ignored? In such case, either the function call is useless and should be dropped or the source code doesn't behave as expected.",
      "properties": {
        "severity": "Warning",
        "warningLevel": "1",
        "defaultSeverity": "Warning",
        "title": "Return values from functions without side effects should not be ignored",
        "category": "Sonar Bug",
        "helpLink": "https://rules.sonarsource.com/csharp/RSPEC-2201",
        "isEnabledByDefault": "True"
      }
    }
  ]
}