
@{
    ViewBag.Title = "Danh mục sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@model Construction.Web.Areas.Admin.Models.Category.CategoryViewModel

<div class="col-md-12 col-sm-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Danh sách danh mục </h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a href="#"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Thêm</a>
                </li>
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card-box table-responsive">
                        <table id="grid-data" class="table table-striped table-bordered"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var columnGrid = htmlDecode('@Model.GridHeader');
    var _category = null;
    var Page = function (pageNumber, pageSize) {
        this.PageNumber = pageNumber;
        this.PageSize = pageSize;
    }
    var CATEGORY = function () {
        this.variable = {
            pageIndex: 0,
            pageSize: 10
        };
        this.DataTables = null;
    }
    CATEGORY.prototype = new Base();

    CATEGORY.prototype.init = function () {
        this.regisEvent();
        this.getList();
    }

    CATEGORY.prototype.regisEvent = function () {
        var $this = this;

    }

    CATEGORY.prototype.getList = function () {
        var $this = this;
        var column = JSON.parse(columnGrid);
        var columnRender = [];
        $.each(column, function (index, objColumn) {
            if (objColumn.data == "Action") {
                objColumn.render = function (data, type, row, meta) {

                    var $btnEdit = '<a class="btn btn-info"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Sửa</a>';
                    var $btnDelete = '<a class="btn btn-danger"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Xóa</a>';
                    var $div = $("<div>").append($btnEdit).append($btnDelete);
                    return $div.html();
                }
            }
            //if (objColumn.data == "Status") {
            //    objColumn.render = function (data, type, row, meta) {
            //        if (row.UNIT != null)
            //            return row.UNIT.Unit_Name;
            //        else
            //            return '';

            //    }
            //}

            columnRender.push(objColumn);
        })
        $this.DataTables = $('#grid-data').DataTable({
            responsive: true,
            processing: true,
            serverSide: true,
            searching: false,
            autoWidth: false,
            columns: column,
            ajax: {
                url: '/admin/category/getlist',
                dataType: "json",
                type: 'Get',
                data: function () {
                    //var request = new GetProducts_Request();
                    //request.Page = new Page($this.variable.pageIndex, $this.variable.pageSize);
                    //return request;
                },
                dataFilter: function (response) {
                    var data = JSON.parse(response);
                    var jsonObj = {};
                    jsonObj.recordsTotal = data.TotalRow;
                    jsonObj.recordsFiltered = data.TotalRow;
                    jsonObj.data = data.Results;
                    return JSON.stringify(jsonObj);
                }
            },

        })
        .on('page.dt', function () {
            var info = $this.DataTables.page.info();
            $this.variable.pageIndex = info.page;
            $this.variable.pageSize = info.length;
        });
    }

    $(function () {
        _category = new CATEGORY();
        _category.init();
    });
</script>

